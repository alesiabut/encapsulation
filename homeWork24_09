<?
  class User{
    private $name;
    private $lastname;
    private $email;
    private $id;
    function __construct($id,$name,$lastname,$email){
      $this->id=$id;
      $this->name=$name;
      $this->lastname=$lastname;
      $this->email=$email;
    }
    function getId(){return $this->id;}
    function getName(){return $this->name;}
    function getLastname(){return $this->lastname;}
    function getEmail(){return $this->email;}
    //функция (метод, статический static) добавления пользователя:
    static function addUser($name,$lastname,$email,$pass){
      global $mysqli;  //обязательно обращаемся к глобальной переменной тк в php функции не видят переменные кроме внутри себя
      $email = mb_strtolower(trim($email));
      $pass = trim($pass);
      $pass = password_hash($pass, PASSWORD_DEFAULT);
      $result = $mysqli->query("SELECT * FROM `users` WHERE `email`= '$email'");
      if($result->num_rows != 0){
        return json_encode(["result"=>"exist"]);
      }
      $mysqli->query("INSERT INTO `users`(`name`, `lastname`, `email`, `pass`) VALUES ('$name','$lastname','$email','$pass')");
      return json_encode(["result"=>"success"]);
    }
    // Статический метод авторизации пользователя
    static function authUser($email,$pass){
      global $mysqli;
      $email = mb_strtolower(trim($email));
      $pass = trim($pass);
      $result = $mysqli->query("SELECT * FROM `users` WHERE `email`= '$email'");
      $result= $result->fetch_assoc();
      if(password_verify($pass,$result["pass"])){  //если пароль совпал то полученные от клиента  данные сохраняем в сессию
      return json_encode(["result"=>"success"]);  //и возвращаем json в скрипт успех
      $_SESSION['name']= $result['name']; //записываем в сессию данные из базы данных по ключу 
      $_SESSION['lastname']= $result['lastname'];
      $_SESSION['email']= $result['email'];
      $_SESSION['id']= $result['id'];
      }else{
      return json_encode(["result"=>"no exist"]);
      }  
    }
    
    
    
  }

?>
